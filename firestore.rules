rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if true;
      allow create: if true;
      allow update: if true;
      allow delete: if request.auth.uid == resource.data.uid;
    }
    match /users/{userId}/private/twitter {
      allow read: if false;
      allow write: if request.auth.uid == userId;
    }
    match /articles/{articleId} {
      allow read: if true;
      allow create: if true;
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    match /articles/{articleId}/teachers/{teacherId} {
      allow read: if true;
      allow create: if true;
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    match /articles/{teacherId}/teachers {
      allow read: if true;
      allow create: if true;
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    match /articles/{articleId}/comments/{valueId} {
      allow read: if true;
      allow create: if request.auth.uid != null;
      allow update: if resource.data.uId == request.auth.uid;
      allow delete: if resource.data.uId == request.auth.uid;
    }
  }
}
